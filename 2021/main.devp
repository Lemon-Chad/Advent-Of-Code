#func main;

import iofile as io;

class AOCLogger {
    indentation: num => 0;

    md log<msg> {
        if (indentation == 0) {
            println(msg);
        } else {
            for (_ -> 0:indentation) {
                print("  ");
            }
            println("- " + msg);
        }
    }

    md indent {
        indentation++;
    }

    md outdent {
        indentation--;
        println("");
    }
}
const Logger => AOCLogger();

class Helper {

    mthd stc sumsLessThan<lis #list> = num {
        let sum => 0;
        for (i -> 0 : --(lis.size())) {
            if (lis[i] < lis[++i])
                sum++;
        }
        return sum;
    }

    mthd stc slidingThrees<lis #list> = list -> for (i -> 0 : (lis.size()) - 2) => lis[i] + lis[i + 1] + lis[i + 2];

}

class DayOne {
    stc numbers: num => for (x <- io::readFile("1.txt").split("\n")) => parseNum(x);


    mthd stc partOne = num {
        return Helper::sumsLessThan(DayOne::numbers);
    }

    mthd stc partTwo = num {
        return Helper::sumsLessThan(Helper::slidingThrees(DayOne::numbers));
    }

    mthd stc main {
        Logger::log("Day One:");
        Logger::indent();
        Logger::log("Part One: " + DayOne::partOne());
        Logger::log("Part Two: " + DayOne::partTwo());
        Logger::outdent();
    }
}

fn main<args #list> {
    DayOne::main();
}
